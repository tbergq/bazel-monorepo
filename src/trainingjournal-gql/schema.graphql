# @generated SignedSource<<f94a3a88243388dff4a8d39082a1cb90>>

# <BREAKING-CHANGES-LOG>
#  TYPE_REMOVED: Test was removed.
#  FIELD_REMOVED: RootQuery.test was removed.
#  TYPE_REMOVED: CreateExerciseError was removed.
#  TYPE_REMOVED: CreateExerciseErrorReason was removed.
#  TYPE_REMOVED_FROM_UNION: CreateExerciseError was removed from union type CreateExercisePayload.
# </BREAKING-CHANGES-LOG>

schema {
  query: RootQuery
  mutation: RootMutation
}

"""Successful day creation model"""
type CreateDay {
  dayEdge: DayEdge
}

"""Model for creating a day"""
input CreateDayInput {
  name: String!
  programId: ID!
  weekId: ID!
}

"""Union type of creating a day"""
union CreateDayPayload = CreateDay | UnauthorizedOrUnknown

"""Successful exercise creation model"""
type CreateExercise {
  exerciseEdge: ExerciseEdge
}

"""Model for creating an exercise"""
input CreateExerciseInput {
  description: String
  muscleGroups: [String]
  name: String!
  videoUrl: String
}

"""Union type of creating an exercise"""
union CreateExercisePayload = CreateExercise | UnauthorizedOrUnknown

"""Successful program creation model"""
type CreateProgram {
  programEdge: ProgramEdge
}

"""Model for creating a program"""
input CreateProgramInput {
  name: String!
}

"""Union type of creating a program"""
union CreateProgramPayload = CreateProgram | UnauthorizedOrUnknown

"""Successful set creation model"""
type CreateSet {
  setEdge: SetEdge
}

"""Model for creating a set"""
input CreateSetInput {
  dayId: ID!
  exerciseId: ID!
  group: String
  reps: String!
  sets: String!
}

"""Union type of creating a set"""
union CreateSetPayload = CreateSet | UnauthorizedOrUnknown

"""Successful week creation model"""
type CreateWeek {
  weekEdge: WeekEdge
}

"""Union type of creating a week"""
union CreateWeekPayload = CreateWeek | UnauthorizedOrUnknown

"""Day model"""
type Day implements Node {
  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  name: String
  sets: SetConnection
}

"""A connection to a list of items."""
type DayConnection {
  """A list of edges."""
  edges: [DayEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type DayEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Day
}

interface Error {
  message: String
}

"""Model of an exercise"""
type Exercise {
  description: String

  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  muscleGroups: [String]
  name: String
  videoUrl: String
}

"""A connection to a list of items."""
type ExerciseConnection {
  """A list of edges."""
  edges: [ExerciseEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type ExerciseEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Exercise
}

"""The logged in user"""
type Me {
  email: String
  exercises(after: String, before: String, first: Int, last: Int): ExerciseConnection

  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  programs(after: String, before: String, first: Int, last: Int): ProgramConnection
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

"""Program model"""
type Program implements Node {
  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  name: String
  weeks(after: String, before: String, first: Int, last: Int): WeekConnection
}

"""A connection to a list of items."""
type ProgramConnection {
  """A list of edges."""
  edges: [ProgramEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type ProgramEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Program
}

"""Return type used for range delete mutations"""
type RangeDelete {
  id: ID
  success: Boolean
}

"""Root Mutation."""
type RootMutation {
  createDay(day: CreateDayInput!): CreateDayPayload
  createExercise(exercise: CreateExerciseInput!): CreateExercisePayload
  createProgram(program: CreateProgramInput!): CreateProgramPayload
  createSet(set: CreateSetInput!): CreateSetPayload
  createWeek(name: String!, programId: ID!): CreateWeekPayload
  deleteDay(id: ID!): RangeDelete
  deleteProgram(id: ID!): RangeDelete
  deleteSet(id: ID!): RangeDelete
  deleteWeek(id: ID!): RangeDelete
}

"""Root Query"""
type RootQuery {
  me: Me

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

"""Set model"""
type Set {
  exercise: Exercise
  group: String

  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  reps: String
  sets: String
}

"""A connection to a list of items."""
type SetConnection {
  """A list of edges."""
  edges: [SetEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type SetEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Set
}

"""Used for error type where error is either unauthorized or unknown"""
type UnauthorizedOrUnknown implements Error {
  message: String
  reason: UnauthorizedOrUnknownReason
}

enum UnauthorizedOrUnknownReason {
  UNAUTHORIZED
  UNKNOWN
}

"""Week model"""
type Week {
  days(after: String, before: String, first: Int, last: Int): DayConnection

  """
  The globally unique ID of an object. You can unmask this ID to get original value but please note that this unmasked ID is not globally unique anymore and therefore it cannot be used as a cache key.
  """
  id(opaque: Boolean = true): ID!
  name: String
}

"""A connection to a list of items."""
type WeekConnection {
  """A list of edges."""
  edges: [WeekEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type WeekEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Week
}
