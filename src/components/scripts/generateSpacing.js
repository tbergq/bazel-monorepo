// @flow

import fs from 'fs';
import path from 'path';
import os from 'os';
import prettier from 'prettier';

import breakpoints, { breakpointsMap } from '../src/breakpoints';

const fileName = path.join(__dirname, '..', 'src', 'utilities', 'spacing.css');
if (fs.existsSync(fileName)) {
  fs.unlinkSync(fileName);
}

const styleKeys = {
  xs: 'var(--space-x-small)',
  small: 'var(--space-small)',
  normal: 'var(--space-normal)',
  l: 'var(--space-large)',
  xl: 'var(--space-xl-large)',
  xxl: 'var(--space-xl-large)',
  none: '0',
};

const sides = ['top', 'right', 'bottom', 'left'];
const sizes = ['xs', 'small', 'normal', 'l', 'xl', 'xxl', 'none'];
const spacings = ['margin', 'padding'];

let fileContent = `/* This file is autogenerated. Do not modify manually */${os.EOL}`;

for (const space of spacings) {
  for (const bp of breakpointsMap) {
    for (const side of sides) {
      for (const size of sizes) {
        if (bp === '') {
          fileContent += `.u-${space}-${side}-${size} {${space}-${side}: ${styleKeys[size]}}`;
        } else {
          fileContent += `${breakpoints[bp]} {.u-${space}-${side}-${size}-${bp}{${space}-${side}:${styleKeys[size]};}}`;
        }
      }
    }
  }
}

fs.writeFileSync(fileName, prettier.format(fileContent, { filepath: 'test.css' }));
